# TASK | Build Complete Index of Project Directory and Files
-------------------------------------------------------------------------------
- Go Through the Project Directory and File Structure.
- Build a complete index of the project.
- My aim is to build a complete index of the project.
- I want to be able to use this index to navigate the project.
- I want to be able to use this index to understand the project.
- I need to understand the loading order of the files.
- I need to understand the dependencies between the files.
- I need to understand the core purpose of the files.
- I need to understand the core purpose of the directories.
- I need to understand if there are any redundancies in the project.
- I need to understand if there are any missing files in the project.


# PlanVision Web Application - Project Directory and File Index
-------------------------------------------------------------------------------
This index provides a comprehensive overview of the PlanVision web application project, including the purpose, dependencies, and loading order of all files and directories.

## PROJECT OVERVIEW
PlanVision is a web application for viewing and interacting with architectural drawings. It provides tools for measurements, markup, and navigation of architectural plans.

## ROOT FILES

  **PlanVision-App_-_2.0.1.html**
    Relative Path  |  `PlanVision-App_-_2.0.1.html`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/PlanVision-App_-_2.0.1.html`
    Description    |  Main HTML file for the PlanVision application (version 2.0.1)
    Core Purpose   |  Entry point for the web application, defines the DOM structure and loads all required scripts
    Loading Order  |  Primary file, loads all other JavaScript files in sequence
    Notes
    - Contains the basic HTML structure of the application
    - Includes references to all JavaScript and CSS files in a specific loading order
    - Defines the layout of the application including header, toolbar, canvas container, and footer


  **--REF-Simplified--NA_Plan-Vision-App_-_1.8.8.html**
    Relative Path  |  `--REF-Simplified--NA_Plan-Vision-App_-_1.8.8.html`
    Description    |  Reference HTML file from earlier version (1.8.8)
    Core Purpose   |  Serves as a reference for backwards compatibility and implementation comparison
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Used for reference purposes when updating features or fixing bugs
    - May contain older methods and approaches that are being phased out



-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_02_-_DATA_-_App-Files-And-App-Config
-------------------------------------------------------------------------------
Relative Path  |    `NA40_02_-_DATA_-_App-Files-And-App-Config`
Web URL        |    https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_02_-_DATA_-_App-Files-And-App-Config

Description    |    Configuration and data files for the application
Core Purpose   |    Stores configuration settings and application data files

#### FILES WITHIN `NA40_02_-_DATA_-_App-Files-And-App-Config`

  **NA40_01_01_-_DATA_-_PlanVision-App-Config.json**
    Relative Path  |  `NA40_02_-_DATA_-_App-Files-And-App-Config/NA40_01_01_-_DATA_-_PlanVision-App-Config.json`
    Web URL        |  https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_02_-_DATA_-_App-Files-And-App-Config/NA40_01_01_-_DATA_-_PlanVision-App-Config.json

    Description    |  Main configuration file for the PlanVision application
    Core Purpose   |  Provides configuration settings for the application
    Loading Order  |  Loaded early in the application initialization process (by Core-App-Config-And-Assets-Loader.js)
    Notes
    - Contains core configuration settings including asset paths and application modes
    - Critical for application initialization and functionality


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_03_-_STYL_-_Style-Library
-------------------------------------------------------------------------------
Relative Path  |    `NA40_03_-_STYL_-_Style-Library`
Web URL        |    https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_03_-_STYL_-_Style-Library

Description    |    CSS files for styling the application
Core Purpose   |    Provides visual styling for the application interface

#### FILES WITHIN `NA40_03_-_STYL_-_Style-Library`

  **NA02_02_01_-_NA_Plan-Vision-App_-_2.0.0_-_StyleSheet.css**
    Relative Path  |  `NA40_03_-_STYL_-_Style-Library/NA02_02_01_-_NA_Plan-Vision-App_-_2.0.0_-_StyleSheet.css`
    Web URL        |  https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_03_-_STYL_-_Style-Library/NA02_02_01_-_NA_Plan-Vision-App_-_2.0.0_-_StyleSheet.css

    Description    |  Main CSS stylesheet for the application
    Core Purpose   |  Provides styling for all visual elements of the application
    Loading Order  |  Loaded in the HTML head section, before JavaScript files
    Notes
    - Contains all styles for the application UI components
    - Follows BEM-like naming convention for CSS classes as specified in the CSS coding rules


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_04_-_SCRP_-_File-Loader-Scripts
-------------------------------------------------------------------------------
Relative Path  |    `NA40_04_-_SCRP_-_File-Loader-Scripts`
Web URL        |    https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_04_-_SCRP_-_File-Loader-Scripts

Description    |    Scripts for loading application files and assets
Core Purpose   |    Manages the loading of configuration, assets, and other resources

#### FILES WITHIN `NA40_04_-_SCRP_-_File-Loader-Scripts`

  **NA40_04_01_-_Core-App-Config-And-Assets-Loader.js**
    Relative Path  |  `NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_01_-_Core-App-Config-And-Assets-Loader.js`
    Web URL        |  https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_01_-_Core-App-Config-And-Assets-Loader.js

    Description    |  Loads configuration and drawing data from JSON
    Core Purpose   |  Initializes the application by loading necessary configuration and assets
    Loading Order  |  First script loaded (LOAD 01) in the HTML file
    
    Notes
    - Critical for application initialization
    - Fetches application configuration and asset library
    - Handles error states when assets cannot be loaded

  **NA40_04_02_-_Font-Asset-Loader.js**
    Relative Path  |  `NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_02_-_Font-Asset-Loader.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_02_-_Font-Asset-Loader.js`
    Description    |  Loads font assets for the application
    Core Purpose   |  Manages loading and application of custom fonts
    Loading Order  |  Loaded eighth (LOAD 08) in the HTML file
    Notes
    - Works with Font-Style-Generator.js to apply loaded fonts
    - Handles font loading errors gracefully

  **NA40_04_03_-_Project-Assets-Loader.js**
    Relative Path  |  `NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_03_-_Project-Assets-Loader.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_03_-_Project-Assets-Loader.js`
    Description    |  Loads project-specific assets
    Core Purpose   |  Manages loading of drawing files and project-specific resources
    Loading Order  |  Loaded third (LOAD 03) in the HTML file
    Notes
    - Dependent on Core-App-Config-And-Assets-Loader.js
    - Loads drawing files based on project configuration


  **NA40_04_10_-_Application-Scheduler.js**
    Relative Path  |  `NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_10_-_Application-Scheduler.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_10_-_Application-Scheduler.js`
    Description    |  Main application scheduler that coordinates initialization and loading sequence
    Core Purpose   |  Coordinates the application startup, handling the high-level initialization process and flow control
    Loading Order  |  Loaded second (LOAD 02) in the HTML file
    Notes
    - Manages the overall application lifecycle and initialization process
    - Tracks module initialization status and handles initialization failures
    - Implements error tracking and recovery for application-level errors
    - Provides a debug panel in development mode for monitoring application state
    - Acts as the "orchestrator" that determines when the application is fully loaded and ready
    - Creates and maintains the application state (tracked through modulesInitialized object)
    - Handles completion of application initialization when critical components are ready
    - Dispatches the 'applicationReady' event when the entire application is initialized
    - Controls the loading overlay visibility based on application state
    - Is responsible for top-level error handling via global error event listener
    - Initializes itself on DOMContentLoaded event automatically


  **NA40_04_11_-_Module-Integration.js**
    Relative Path  |  `NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_11_-_Module-Integration.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_04_-_SCRP_-_File-Loader-Scripts/NA40_04_11_-_Module-Integration.js`
    Description    |  Provides integration and communication between different application modules
    Core Purpose   |  Manages the communication channels and integration points between independent modules
    Loading Order  |  Not explicitly referenced in the HTML file, likely loaded by Application-Scheduler.js
    Notes
    - Acts as a "mediator" pattern implementation, facilitating communication between modules
    - Maintains module status tracking (through window.moduleStatus object)
    - Provides a registration system for modules to signal their ready state
    - Connects event listeners between modules to facilitate inter-module communication
    - Implements helper functions to ensure proper integration between asset loaders and renderers
    - Handles edge cases like unannounced modules and provides fallback mechanisms
    - Creates custom events to notify modules about system state changes
    - Provides debugging utilities like window.debugForceLoadDrawing
    - Is focused specifically on module-to-module communication rather than application flow
    - Sets itself up as a global object (window.moduleIntegration) for other modules to interact with
    - Provides specialized methods for connecting font loaders and project assets to renderers
    - Also acts like a API for the application, allowing other modules to interact with it.


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_05_-_SCRP_-_Core-Utility-Scripts
-------------------------------------------------------------------------------
Relative Path  |    `NA40_05_-_SCRP_-_Core-Utility-Scripts`
Web URL        |    `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_05_-_SCRP_-_Core-Utility-Scripts`
Description    |    Core utility scripts for common functionality
Core Purpose   |    Provides shared utility functions used throughout the application

#### FILES WITHIN `NA40_05_-_SCRP_-_Core-Utility-Scripts`
    Notes
    - This directory contains utility scripts that provide common functionality
    - Specific files not listed in the exploration but likely contain helper functions for various operations

### NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts
-------------------------------------------------------------------------------
Relative Path  |    `NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts`
Web URL        |    `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts`
Description    |    Scripts for rendering drawings on the canvas
Core Purpose   |    Manages the display and interaction with architectural drawings



#### FILES WITHIN `NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts`


  **NA40_06_03_-_Canvas-Controller.js**
    Relative Path  |  `NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts/NA40_06_03_-_Canvas-Controller.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts/NA40_06_03_-_Canvas-Controller.js`
    Description    |  Controls canvas interactions and behaviors
    Core Purpose   |  Manages user interactions with the canvas (pan, zoom, etc.)
    Loading Order  |  Not explicitly referenced in the HTML file, likely loaded by Canvas-Renderer.js

   *FILE NOTES*
    - Handles user interaction events on the canvas
    - Manages panning, zooming, and other canvas manipulations


  **NA40_06_04_-_Canvas-Renderer.js**
    Relative Path  |  `NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts/NA40_06_04_-_Canvas-Renderer.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_06_-_SCRP_-_Canvas-And-Main-Rendering-Scripts/NA40_06_04_-_Canvas-Renderer.js`
    Description    |  Renders drawings on the canvas element
    Core Purpose   |  Handles the actual drawing of architectural plans on the canvas
    Loading Order  |  Loaded fifth (LOAD 05) in the HTML file

   *FILE NOTES*
    - Core drawing functionality for the application
    - Dependent on Measurement-Scaling.js for proper scaling of drawings



-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_07_-_SCRP_-_Measurement-And-Math-Scripts
-------------------------------------------------------------------------------
Relative Path  |    `NA40_07_-_SCRP_-_Measurement-And-Math-Scripts`
Web URL        |    `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_07_-_SCRP_-_Measurement-And-Math-Scripts`
Description    |    Scripts for measurement functionality and mathematical calculations
Core Purpose   |    Provides measurement tools and scaling logic for architectural drawings

#### FILES WITHIN `NA40_07_-_SCRP_-_Measurement-And-Math-Scripts`

  **NA40_07_01_-_Measurement-Scaling.js**
    Relative Path  |  `NA40_07_-_SCRP_-_Measurement-And-Math-Scripts/NA40_07_01_-_Measurement-Scaling.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_07_-_SCRP_-_Measurement-And-Math-Scripts/NA40_07_01_-_Measurement-Scaling.js`
    Description    |  Handles drawing scale and measurement unit conversion
    Core Purpose   |  Ensures accurate scaling of measurements on architectural drawings
    Loading Order  |  Loaded fourth (LOAD 04) in the HTML file
    Notes
    - Critical for accurate measurements
    - Handles conversion between screen pixels and real-world units
    - Loaded before Canvas-Renderer.js which depends on scaling functionality

  **NA40_07_02_-_Measurement-Tools.js**
    Relative Path  |  `NA40_07_-_SCRP_-_Measurement-And-Math-Scripts/NA40_07_02_-_Measurement-Tools.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_07_-_SCRP_-_Measurement-And-Math-Scripts/NA40_07_02_-_Measurement-Tools.js`
    Description    |  Implementation of various measurement tools (linear, area, etc.)
    Core Purpose   |  Provides tools for measuring distances and areas on drawings
    Loading Order  |  Loaded sixth (LOAD 06) in the HTML file
    Notes
    - Dependent on Measurement-Scaling.js
    - Implements linear measurement, rectangle measurement, and area measurement tools
    - Handles user interaction for creating and managing measurements


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_08_-_SCRP_-_User-Interface-And-Navigation
-------------------------------------------------------------------------------
Relative Path  |    `NA40_08_-_SCRP_-_User-Interface-And-Navigation`
Web URL        |    `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_08_-_SCRP_-_User-Interface-And-Navigation`
Description    |    Scripts for user interface and navigation elements
Core Purpose   |    Manages the application's UI components and user navigation

#### FILES WITHIN `NA40_08_-_SCRP_-_User-Interface-And-Navigation`

  **NA40_08_01_-_Core-App-UI-And-Navigation.js**
    Relative Path  |  `NA40_08_-_SCRP_-_User-Interface-And-Navigation/NA40_08_01_-_Core-App-UI-And-Navigation.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_08_-_SCRP_-_User-Interface-And-Navigation/NA40_08_01_-_Core-App-UI-And-Navigation.js`
    Description    |  Core UI components and navigation functionality
    Core Purpose   |  Manages the application's user interface and navigation
    Loading Order  |  Loaded seventh (LOAD 07) in the HTML file
    Notes
    - Handles UI component initialization and interactions
    - Manages application navigation flows
    - Sets up event listeners for UI elements

  **NA40_08_02_-_Measurement-Tool-Button-Handlers.js**
    Relative Path  |  `NA40_08_-_SCRP_-_User-Interface-And-Navigation/NA40_08_02_-_Measurement-Tool-Button-Handlers.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_08_-_SCRP_-_User-Interface-And-Navigation/NA40_08_02_-_Measurement-Tool-Button-Handlers.js`
    Description    |  Handler functions for measurement tool buttons
    Core Purpose   |  Connects UI buttons with measurement tool functionality
    Loading Order  |  Loaded after Core-App-UI-And-Navigation.js (LOAD 07B)
    Notes
    - Connects the UI buttons with the measurement tool functionality
    - Dependent on both UI components and measurement tools

  **NA40_08_10_-_Font-Style-Generator.js**
    Relative Path  |  `NA40_08_-_SCRP_-_User-Interface-And-Navigation/NA40_08_10_-_Font-Style-Generator.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_08_-_SCRP_-_User-Interface-And-Navigation/NA40_08_10_-_Font-Style-Generator.js`
    Description    |  Generates font styles for the application
    Core Purpose   |  Creates CSS styles for custom fonts
    Loading Order  |  Loaded with Font-Asset-Loader.js (LOAD 08)
    Notes
    - Works with Font-Asset-Loader.js to apply loaded fonts
    - Generates CSS for font styling


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_10_-_SCRP_-_Backward-Compatibility-Scripts
-------------------------------------------------------------------------------
Relative Path  |    `NA40_10_-_SCRP_-_Backward-Compatibility-Scripts`
Web URL        |    `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_10_-_SCRP_-_Backward-Compatibility-Scripts`
Description    |    Scripts for ensuring backward compatibility
Core Purpose   |    Provides compatibility with older browsers and previous versions

#### FILES WITHIN `NA40_10_-_SCRP_-_Backward-Compatibility-Scripts`

  **NA40_10_01_-_Polyfill-Loader.js**
    Relative Path  |  `NA40_10_-_SCRP_-_Backward-Compatibility-Scripts/NA40_10_01_-_Polyfill-Loader.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_10_-_SCRP_-_Backward-Compatibility-Scripts/NA40_10_01_-_Polyfill-Loader.js`
    Description    |  Loads polyfills for older browsers
    Core Purpose   |  Ensures functionality in browsers lacking modern JavaScript features
    Loading Order  |  Loaded ninth (LOAD 09) in the HTML file
    Notes
    - Loads polyfills conditionally based on browser capabilities
    - Important for cross-browser compatibility


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_20_-_SCRP_-_Dev-Mode-Scripts
-------------------------------------------------------------------------------
Relative Path  |    `NA40_20_-_SCRP_-_Dev-Mode-Scripts`
Web URL        |    `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_20_-_SCRP_-_Dev-Mode-Scripts`
Description    |    Scripts for development mode functionality
Core Purpose   |    Provides debugging and development tools

#### FILES WITHIN `NA40_20_-_SCRP_-_Dev-Mode-Scripts`

  **NA40_20_01_-_Dev-Mode-Panel.js**
    Relative Path  |  `NA40_20_-_SCRP_-_Dev-Mode-Scripts/NA40_20_01_-_Dev-Mode-Panel.js`
    Web URL        |  `https://www.noble-architecture.com/na-apps/NA40_-_PlanVision-Web-Application/NA40_20_-_SCRP_-_Dev-Mode-Scripts/NA40_20_01_-_Dev-Mode-Panel.js`
    Description    |  Development mode panel and tools
    Core Purpose   |  Provides debugging interfaces and tools for development
    Loading Order  |  Loaded last (LOAD 10) in the HTML file
    Notes
    - Initializes development mode UI and functionality
    - Includes helper functions for debugging
    - Only active when development mode is enabled in the configuration


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-


### NA40_01_-_DOCS_-_Application-Documentation
-------------------------------------------------------------------------------
Relative Path  |    `NA40_01_-_DOCS_-_Application-Documentation`
Web URL        |    N/A (development documentation)
Description    |    Documentation directory containing design principles, coding rules, and version history
Core Purpose   |    Provides comprehensive documentation for developers and maintainers

#### FILES WITHIN `NA40_01_-_DOCS_-_Application-Documentation`

  **NA40_01_01_-_INFO_-_Design-Manifesto.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_01_01_-_INFO_-_Design-Manifesto.txt`
    Web URL        |  N/A (development documentation)
    Description    |  Design principles and rationale for the PlanVision application
    Core Purpose   |  Documents the design philosophy and architectural decisions
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Provides the foundational design rationale for the application
    - Explains core design decisions and their reasoning

  **NA40_01_03_-_RULE_-_Core-Code-Structure-&-Formatting-Rules.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_01_03_-_RULE_-_Core-Code-Structure-&-Formatting-Rules.txt`
    Web URL        |  N/A (development documentation)
    Description    |  Coding standards and formatting guidelines
    Core Purpose   |  Ensures consistent code structure and formatting across the project
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Defines standards for code formatting, naming conventions, and organization
    - Important for maintaining consistency in collaborative development

  **NA40_01_04_-_INFO_-_Version-Hisotry-And-Revision-Notes.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_01_04_-_INFO_-_Version-Hisotry-And-Revision-Notes.txt`
    Web URL        |  N/A (development documentation)
    Description    |  Version history and change log
    Core Purpose   |  Tracks changes between versions and updates
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Documents all significant changes between versions
    - Important for understanding the evolution of the application

  **NA40_01_05_-_RULE_-_Core-Coding-Rules_-_CSS-Files.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_01_05_-_RULE_-_Core-Coding-Rules_-_CSS-Files.txt`
    Web URL        |  N/A (development documentation)
    Description    |  CSS-specific coding standards and guidelines
    Core Purpose   |  Ensures consistent stylesheet structure and formatting
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Provides specific guidelines for CSS organization and naming
    - Important for maintaining scalable and maintainable stylesheets

  **NA40_01_06_-_RULE_-_Core-Coding-Rules_-_Json-Files.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_01_06_-_RULE_-_Core-Coding-Rules_-_Json-Files.txt`
    Web URL        |  N/A (development documentation)
    Description    |  JSON-specific formatting standards and guidelines
    Core Purpose   |  Ensures consistent JSON structure and formatting
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Provides guidelines for JSON data organization
    - Important for maintaining consistent configuration files

  **NA40_10_01_-_DLIS_-_Improvements-List-&-Tasks.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_10_01_-_DLIS_-_Improvements-List-&-Tasks.txt`
    Web URL        |  N/A (development documentation)
    Description    |  List of planned improvements and tasks
    Core Purpose   |  Tracks future development tasks and enhancements
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Contains a roadmap for future development
    - Used for project planning and issue tracking

  **NA40_20_01_-_DLIS_-_Version-2.0.0._-_Notes.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_20_01_-_DLIS_-_Version-2.0.0._-_Notes.txt`
    Web URL        |  N/A (development documentation)
    Description    |  Specific notes for version 2.0.0
    Core Purpose   |  Documents details specific to version 2.0.0
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Contains detailed information about changes in version 2.0.0
    - Important for understanding the transition from earlier versions

  **NA40_40_01_-_DLIS_-_Version-2.0.0_-_Task-Breakdown.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_40_01_-_DLIS_-_Version-2.0.0_-_Task-Breakdown.txt`
    Web URL        |  N/A (development documentation)
    Description    |  Task breakdown for version 2.0.0 development
    Core Purpose   |  Outlines specific tasks for implementing version 2.0.0
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Contains detailed breakdown of development tasks for version 2.0.0
    - Used for project management and task tracking

  **NA40_50_01_-_DLIS_-_Version-2.0.1_-_Task-Breakdown.txt**
    Relative Path  |  `NA40_01_-_DOCS_-_Application-Documentation/NA40_50_01_-_DLIS_-_Version-2.0.1_-_Task-Breakdown.txt`
    Web URL        |  N/A (development documentation)
    Description    |  Task breakdown for version 2.0.1 development
    Core Purpose   |  Outlines specific tasks for implementing version 2.0.1
    Loading Order  |  Not loaded in the application, reference only
    Notes
    - Contains detailed breakdown of development tasks for version 2.0.1
    - Used for project management and task tracking


-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-

## LOADING ORDER SUMMARY
1. Core App Config and Assets Loader (NA40_04_01_-_Core-App-Config-And-Assets-Loader.js)
2. Application Scheduler (NA40_04_10_-_Application-Scheduler.js)
3. Project Assets Loader (NA40_04_03_-_Project-Assets-Loader.js)
4. Measurement Scaling (NA40_07_01_-_Measurement-Scaling.js)
5. Canvas Renderer (NA40_06_04_-_Canvas-Renderer.js)
6. Measurement Tools (NA40_07_02_-_Measurement-Tools.js)
7. Core App UI and Navigation (NA40_08_01_-_Core-App-UI-And-Navigation.js)
   7B. Measurement Tool Button Handlers (NA40_08_02_-_Measurement-Tool-Button-Handlers.js)
8. Font Asset Loader and Style Generator (NA40_04_02_-_Font-Asset-Loader.js, NA40_08_10_-_Font-Style-Generator.js)
9. Backward Compatibility Scripts (NA40_10_01_-_Polyfill-Loader.js)
10. Dev Mode Panel (NA40_20_01_-_Dev-Mode-Panel.js)

## DEPENDENCIES OVERVIEW
- The application follows a clear loading order to ensure proper initialization of interdependent components
- Core configuration and asset loading happens first
- Measurement scaling is loaded before canvas rendering which depends on it
- UI components are loaded after rendering systems are initialized
- Development tools are loaded last to ensure they can interact with all other components

## POTENTIAL REDUNDANCIES
After close examination of the Application-Scheduler.js and Module-Integration.js files, there appears to be some overlapping functionality but with distinct purposes:

1. Both files track module initialization status but serve different purposes:
   - Application-Scheduler tracks high-level application readiness through modulesInitialized object
   - Module-Integration focuses on inter-module communication through window.moduleStatus object

2. Both files dispatch 'applicationReady' events but from different perspectives:
   - Application-Scheduler signals the entire application is ready for use
   - Module-Integration signals that critical modules are loaded for rendering

3. While there appears to be some redundancy in their tracking mechanisms, they serve complementary purposes:
   - Application-Scheduler is the "orchestrator" controlling overall application flow
   - Module-Integration is the "mediator" enabling communication between modules

This split architecture likely resulted from the refactoring process to separate concerns between 
application lifecycle management and inter-module communication.

## POTENTIAL MISSING FILES
Without a complete analysis of file contents, it's difficult to identify missing files. However, the project structure appears to be comprehensive with modules for all necessary functionality.

## APPLICATION-SCHEDULER vs. MODULE-INTEGRATION
The two files serve distinct but complementary purposes in the architecture:

1. **Application-Scheduler.js** acts as the top-level controller/orchestrator:
   - Manages the overall application lifecycle
   - Controls the main initialization sequence
   - Handles application-level error tracking and recovery
   - Determines when the application is "ready"
   - Controls UI elements like the loading overlay

2. **Module-Integration.js** implements the mediator pattern:
   - Enables module-to-module communication
   - Provides integration points between separate components
   - Ensures proper synchronization between asset loading and rendering
   - Handles specific module connections through custom events
   - Offers debugging utilities for module interaction

The separation between these files follows sound architectural principles by dividing the 
application's flow control (scheduler) from its communication infrastructure (integration),
which is likely a deliberate design choice rather than accidental duplication.
