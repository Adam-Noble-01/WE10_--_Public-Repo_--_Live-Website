---
====================================================================================================
NOBLE ARCHITECTURE WEBSITE & APPLICATIONS - Core Project File & Code Naming Conventions
AD10_02_-_READ_-_Core-Project-File-And-Code-Naming-Conventions-Document.txt
 
VERSION HISTORY
05-Apr-2025 - Version 1.0 - Initial Draft

DESCRIPTION
- This document is the core conventions reference document for the project.
- These codes are global across the project and are used to identify the file type of a given file.
- These code also define the naming conventions for code objects, variables, functions, etc.
- All code MUST align with the standards set out in this document.

====================================================================================================
---

# Website Design Manifest
###### A Breakdown Of The Website Design Manifest
----------------------------------------------------------------------------------------------------

### Website URL
http://www.noble-architecture.com/



## ASSET NAMING CONVENTION RULES
###### A Breakdown Of The Projects Core Asset Naming Conventions
-------------------------------------------------------------------------------

#### Notes On Image & Graphical Asset Naming Conventions
Format Example String
 ```NA0#_0#_-_NA-Pictogram_-_PNG_-_1500px_-_Idea-Lightbulb.png```
 
Filename Breakdown
    - `NA0#`            :    Variable prefix matching 2 letter + 2 digit code; used to group files by type.
    - `0#`              :    Sequential item number within the series (e.g., `01, 02, 03` etc.)
    - `NA-Pictogram`    :    Asset type identifier
    - `PNG`             :    File format
    - `1500px`          :    Resolution/size specification
    - `Idea-Lightbulb`  :    Descriptive name of the pictogram in Title Case with hyphens


- Always use string with no white spaces or special characters.
- Never spaces in filenames.
- Use hyphens `-` instead of underscores `_` for word separation in the descriptive part.
- Create clear string sections using `_-_`
- Use sequential numbering for each file listed.
- File number prefix codes are always unique globally.
    - This ensure easy searching sorting and indexing of all assets.
- Use descriptive names are brief but clear
- Descriptions are always in `Title Case`

#### Example File Names
- This context shows a directory containing graphical assets.

```example_noble-architecture-pictogram_file_names
NA04_01_-_NA-Pictogram_-_PNG_-_1500px_-_Idea-Lightbulb.png
NA04_02_-_NA-Pictogram_-_PNG_-_1500px_-_Drafting-Tools.png
NA04_03_-_NA-Pictogram_-_PNG_-_1500px_-_Existing-Plan.png
```

```example_favicon_file_names
AD05_01_-_NA_Favicon_-_SVG-h50mm.svg
AD05_02_-_NA_Favicon_-_PNG-h2000px.png
AD05_03_-_NA_Favicon_-_PNG-h1000px.png
```

#### Standard Font File Names
- `assets/AD04_-_LIBR_-_Common_-_Front-Files/`
- These are the standard fonts used on the website.
- These fonts are served by the website.
- Noble Architecture uses `Open Sans` as the brands standard font.

```example_standard-font_file_names
AD04_01_-_Standard-Font_-_Open-Sans-Regular.ttf
AD04_02_-_Standard-Font_-_Open-Sans-SemiBold.ttf
AD04_03_-_Standard-Font_-_Open-Sans-Light.ttf
AD04_04_-_Standard-Font_-_Open-Sans-Medium.ttf
AD04_05_-_Standard-Font_-_Open-Sans-Bold.ttf
```

#### Handwritten Font File Names
- `assets/AD04_-_LIBR_-_Common_-_Front-Files/`
- These are the handwritten fonts used for the PlanVision Application.
    - Specifically used for the Markup & Annotation features.
- These fonts are served by the website.
- Noble Architecture uses `Caveat` as the brands handwritten font style.

```example_handwritten-font_file_names
AD04_21_-_Handwritten-Font_-_Caveat-Regular.ttf
AD04_22_-_Handwritten-Font_-_Caveat-SemiBold.ttf
AD04_23_-_Handwritten-Font_-_Caveat-Light.ttf
AD04_24_-_Handwritten-Font_-_Caveat-Medium.ttf
AD04_25_-_Handwritten-Font_-_Caveat-Bold.ttf
```


### FILE PREFIX SECTION BREAKDOWN
----------------------------------------------------------------------------------------------------

### Primary Prefix Codes
- The first two letter and two number section at the very beginning of the filename.
- This section is used to identify the main group the file belongs to.

#### High Level File Group Codes
`DC##`  =  Project Specific Documentation such as this file.
`AD##`  =  Common Asset Directory; containing images, fonts, icons, etc.
`NA##`  =  Noble Architecture Directory; containing company specific files.
`NB##`  =  NobleAudio Directory; containing NobleAudio specific files.
`SN##`  =  'Studio NoodlFj√∏rd' (Programming Studio Name) Directory; containing programming files.

#### Script File Type Codes
`JS##`  =  JavaScript File
`CS##`  =  CSS Style Sheet File
`HT##`  =  HTML Document File
`JN##`  =  JSON Data File





### Project File Type Reference List
----------------------------------------------------------------------------------------------------

- - - Information & Documentation Files - - -
`READ`  =  Readme files containing information about the project.
`RULE`  =  Text File Defining strict rules and MANDATORY coding conventions.
`INFO`  =  A Readme file of less importance than a READ or RULE file.
`USER`  =  A User Guide or User Manual designed for non-technical users of the project.
`DLIS`  =  Defines task lists, improvements ideas and other notes during development, means "Development List".

- - - Data Files - - -
`DATA`  =  A Directory of data files for the project; note data typically stores data in a structured json format.

- - - Application Files - - -
`APPS`  =  A Directory containing collections of scripts making up a complete application typically.

- - - Style Files - - -
`STYL`  =  Refers to CSS style sheet files defining a style or set of styles.

- - - Code Files - - -
`HTML`  =  Refers to HTML files containing the structure and content of the project.
`JSON`  =  Refers to JSON files which store data in a structured format for the project.
`SETP`  =  Denotes template files & folders; meaning term means "Setup".
`PAGE`  =  Refers to a static page of the website.

- - - Asset Files - - -
`LOGO`  =  Refers to a logo or branded graphic file for the project.


    
### Project JavaScript Function Code Reference List
----------------------------------------------------------------------------------------------------
`LOAD-FN`  =  Loading Function



### CORE UNITS FORMAT REFERENCE
----------------------------------------------------------------------------------------------------

*Date Format:*      |   `dd-mmm-yyyy`
*Time Format:*      |   `hh:mm`

*Example*
`09-Apr-2025 | 14:45`

#### Rationale
- This format is clear, compact 
- Widely used in British administrative and technical documents. 
- It avoids confusion between UK and US date styles.


----------------------------------------------------------------------------------------------------
###### END OF FILE 



