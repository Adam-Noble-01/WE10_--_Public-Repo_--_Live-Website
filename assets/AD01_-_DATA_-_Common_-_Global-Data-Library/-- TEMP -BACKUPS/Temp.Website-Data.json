{
    "site-config":{
        "site-name"            :  "Noble Architecture",
        "site-version"         :  "1.0.1",
        "site-author"          :  "Adam Noble",
        "site-email"           :  "info@noble-architecture.com",
        "site-phone"           :  "NIL",
        "site-address"         :  "NIL",
        "site-language"        :  "en-GB",
        "site-currency"        :  "GBP",
        "site-timezone"        :  "Europe/London",
        "site-developer-mode":{
            "site-dev-tools-mode"        :  false,
            "site-dev-maintenance-mode"  :  false,
            "site-dev-enable-caching"    :  true,
            "site-dev-last-deployment"   :  "PLACEHOLDER",
            "site-dev-dev-environment"   :  "production",
            "site-dev-api-keys":{
                    "mapbox"             :  "{{THIS_IS_A_PLACEHOLDER}}",
                    "form-submission"    :  "{{THIS_IS_A_PLACEHOLDER}}"
            }
        },
        "third-party-services"  :  {
            "third-party-fonts-notes" : "ONLY USE GOOGLE FONTS FOR FALLBACKS! Otherwise use main Noble Architecture website to serve fonts",
            "fonts"                   :  "Google Fonts",
            "cdn"                     :  "PLACEHOLDER",
            "forms"                   :  "PLACEHOLDER"
        }
    }
}



{
  "file_metadata": {
      "file-name"         :  "SN40_31_--_PlanVision_-_Asset-Link-Library.json",
      "file-CDN-URL"      :  "https://raw.githubusercontent.com/Adam-Noble-01/RE20_--_Core_Repo_--_Public/refs/heads/main/SN40_31_--_Web-App_-_PlanVision_-_Web-Assets-Library/SN40_31_--_PlanVision_-_Asset-Link-Library.json",
      "file-author"       :  "Adam Noble",
      "file-description"  :  "This JSON file serves as a centralised assets repository reference for the Architecture Drawing Application. It organises all essential app resources into clearly defined categories. Each asset is identified by a unique key with the value pointing to a GitHub repository URL or public CDN URL. This structure simplifies asset management, enhances maintainability, and streamlines referencing within the application codebase."
  },
  "file_revisions": [
      {
          "version": "0.1.0",
          "last-updated": "25-Mar-2025",
          "changes": [
              "Initial release with structured asset categories.",
              "Defined unique keys for all assets.",
              "Integrated references to GitHub/CDN URLs."
          ]
      }
  ],
  "core-commmon_assets": {
      "images_png": {
          "na-brand-logo": {
              "dir_path": "/assets/NA03_-_LIBR_-_NA-Site_-_Core-Brand-Image-Assets/NA03_41_-_PNG_-_Profile-Logo_-_h2000px.png",
              "web_url": "https://www.noble-architecture.com/assets/NA03_-_LIBR_-_NA-Site_-_Core-Brand-Image-Assets/NA03_41_-_PNG_-_Profile-Logo_-_h2000px.png"
          },
          "icon_toolbar": {
              "dir_path": "/assets/AD05_-_LIBR_-_Common_-_Icons-and-favicons/AD05_01_-_ICON_-_Toolbar-Icon.png",
              "web_url": "https://www.noble-architecture.com/assets/AD05_-_LIBR_-_Common_-_Icons-and-favicons/AD05_01_-_ICON_-_Toolbar-Icon.png"
          },
          "placeholder_drawing-a1-format": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/NA01_01_-_PLACE_-_Drawing-A1-Format.png",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/NA01_01_-_PLACE_-_Drawing-A1-Format.png"
          },
          "placeholder_drawing-a2-format": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/NA01_02_-_PLACE_-_Drawing-A2-Format.png",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/NA01_02_-_PLACE_-_Drawing-A2-Format.png"
          }
      },
      "core-commmon_fonts": {
          "fonts-open-sans": {
              "open-sans-regular": {
                  "dir_path": "/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_01_-_Standard-Font_-_Open-Sans-Regular.ttf",
                  "web_url": "https://www.noble-architecture.com/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_01_-_Standard-Font_-_Open-Sans-Regular.ttf"
              },
              "open-sans-semi-bold": {
                  "dir_path": "/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_02_-_Standard-Font_-_Open-Sans-SemiBold.ttf",
                  "web_url": "https://www.noble-architecture.com/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_02_-_Standard-Font_-_Open-Sans-SemiBold.ttf"
              },
              "open-sans-light": {
                  "dir_path": "/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_03_-_Standard-Font_-_Open-Sans-Light.ttf",
                  "web_url": "https://www.noble-architecture.com/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_03_-_Standard-Font_-_Open-Sans-Light.ttf"
              }
          },
          "fonts-caveat": {
              "caveat-regular": {
                  "dir_path": "/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_21_-_Handwritten-Font_-_Caveat-Regular.ttf",
                  "web_url": "https://www.noble-architecture.com/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_21_-_Handwritten-Font_-_Caveat-Regular.ttf"
              },
              "caveat-semi-bold": {
                  "dir_path": "/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_22_-_Handwritten-Font_-_Caveat-SemiBold.ttf",
                  "web_url": "https://www.noble-architecture.com/assets/AD04_-_LIBR_-_Common_-_Front-Files/AD04_22_-_Handwritten-Font_-_Caveat-SemiBold.ttf"
              }
          }
      },
      "core-commmon_snippets": {
          "drawing_canvas": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/drawing_canvas.js",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/drawing_canvas.js"
          },
          "measurement_tool": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/measurement_tool.js",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/measurement_tool.js"
          },
          "annotation_handler": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/annotation_handler.js",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/annotation_handler.js"
          }
      },  
      "core-commmon_components": {  
          "toolbar_component": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/toolbar_component.js",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/toolbar_component.js"
          },
          "sidebar_component": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/sidebar_component.js",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/sidebar_component.js"
          },
          "footer_component": {
              "dir_path": "/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/footer_component.js",
              "web_url": "https://www.noble-architecture.com/assets/NA01_-_DATA_-_NA-Site_-_Project-Data/footer_component.js"
          }
      },  
      "core-commmon_stylesheets": {  
          "main_styles": {
              "dir_path": "/assets/NA03_-_STYL_-_NA-Site_-_StyleSheets/main_styles.css",
              "web_url": "https://www.noble-architecture.com/assets/NA03_-_STYL_-_NA-Site_-_StyleSheets/main_styles.css"
          },
          "toolbar_styles": {
              "dir_path": "/assets/NA03_-_STYL_-_NA-Site_-_StyleSheets/toolbar_styles.css",
              "web_url": "https://www.noble-architecture.com/assets/NA03_-_STYL_-_NA-Site_-_StyleSheets/toolbar_styles.css"
          },
          "annotation_styles": {
              "dir_path": "/assets/NA03_-_STYL_-_NA-Site_-_StyleSheets/annotation_styles.css",
              "web_url": "https://www.noble-architecture.com/assets/NA03_-_STYL_-_NA-Site_-_StyleSheets/annotation_styles.css"
          }
      },
      "core-commmon_javascript_libraries": {
          "fabric_js": {
              "dir_path": "/src/NA01_-_DATA_-_NA-Site_-_Project-Data/fabric_js.js",
              "web_url": "https://www.noble-architecture.com/src/NA01_-_DATA_-_NA-Site_-_Project-Data/fabric_js.js"
          },
          "chart_js": {
              "dir_path": "/src/NA01_-_DATA_-_NA-Site_-_Project-Data/chart_js.js",
              "web_url": "https://www.noble-architecture.com/src/NA01_-_DATA_-_NA-Site_-_Project-Data/chart_js.js"
          }
      }
  }
}


{
  "siteStructure": [
    {
      "pageId"            :  "WEB-PAGE-01",
      "pageTitle"         :  "Home",
      "pageLoadNo"        :  1,
      "pageDescription"   :  "main landing page with featured projects",
      "pageKeywords"      :  "architecture, projects, portfolio",
      "pagePath"          :  "index.html",
      "pageBotVisible"    :  false,
      "pageStatus"        :  "live",
      "pageDevLogs": [
        {
          "logVersion"    :  "1.0.0",
          "logTitle"      :  "initial commit",
          "logDate"       :  "04-Apr-2025",
          "logNotes"      :  "Website setup and published to GitHub Pages"
        },
        {
          "logVersion"    :  "1.0.0",
          "logTitle"      :  "initial commit",
          "logDate"       :  "04-Apr-2025",
          "logNotes"      :  "Website setup and published to GitHub Pages"
        }
      ]
    },
    {
      "pageId"            :  "WEB-PAGE-02",
        }
      ]
    }
  ],
  "projects": {
    "description"         :  "gallery of architectural projects",
    "content"             :  "individual project pages with details and interactive web apps"
  },
  "internalTools": {
    "unlistedPages": [
      "app cost calculator",
      "material database",
      "timeline generator",
      "document templates",
      "coding templates"
    ],
    "description"         :  "private section with utilities for the team (not publicly accessible)",
    "sections": [
      "client-portal"
    ]
  }
}



## Aligned Column-Style JSON Format

This project uses a specific JSON formatting convention that enhances readability while maintaining valid JSON syntax. This document explains the formatting rules for contributors and automated tools to follow.

### Key Formatting Rules

1. **Property Name Alignment**:
   - Identify the longest property name within each object
   - Pad all property names with spaces to match the longest property name
   - Add two spaces after the padded property name
   - Add a colon
   - Add two spaces after the colon before the value

2. **Example Format**:
   ```json
   {
     "shortKey"           :  "value",
     "longerPropertyName" :  "another value"
   }
   ```

3. **Nested Objects and Arrays**:
   - Maintain standard JSON indentation (2 spaces) for nested objects
   - Apply the same alignment pattern within each nested object level
   - Array elements that are simple values do not require alignment

### Implementation Details

For each object in the JSON:
1. Calculate the maximum property name length within that object context
2. For each property in the object:
   - Calculate padding: `maxLength - currentPropertyLength + 2`
   - Add that many spaces after the property name
   - Add colon
   - Add exactly 2 spaces before the value

### Example Implementation

```javascript
function formatJsonWithAlignedColons(jsonObj) {
  // Process each object level recursively
  if (typeof jsonObj !== 'object' || jsonObj === null) return jsonObj;
  
  // Find the longest key length for this object
  const keys = Object.keys(jsonObj);
  const maxKeyLength = keys.reduce((max, key) => 
    Math.max(max, key.length), 0);
  
  // Format each property
  const formattedEntries = keys.map(key => {
    const value = jsonObj[key];
    // Determine if value needs recursive formatting
    const formattedValue = typeof value === 'object' && value !== null
      ? formatJsonWithAlignedColons(value)
      : value;
    
    // Calculate padding for alignment
    const padding = ' '.repeat(maxKeyLength - key.length + 2);
    // Return the formatted key-value pair
    return `"${key}"${padding}:  ${JSON.stringify(formattedValue)}`;
  });
  
  // Construct the formatted object
  return `{\n  ${formattedEntries.join(',\n  ')}\n}`;
}
```

### Rationale

This formatting convention serves several purposes:
1. **Enhanced Readability**: The column-like appearance makes it easier to scan property names and values
2. **Consistent Visual Structure**: Creates a predictable visual pattern that helps identify related properties
3. **Maintainability**: Makes differences more apparent in version control diffs
4. **Valid JSON**: Despite the custom spacing, the format remains valid JSON that any parser can process

This convention should be applied to all JSON files in the project, including configuration files, data models, and API response examples.





---------------------------------------------------------------------------------------------------
# ⚠⚠⚠⚠ BELOW IS EXAMPLE IDEAS NOT PART OF THE PROJECT STANDARDS ⚠⚠⚠⚠
# Additional Typical JSON Properties for Website Architecture

Based on the existing site structure data, here are other properties that might be typical to include in this type of architecture documentation:

## Page-Level Properties

```json
{
  "pageId"            :  "WEB-PAGE-03",
  "pageTitle"         :  "Projects",
  "pageLoadNo"        :  2,
  "pageDescription"   :  "overview of all architecture projects",
  "pageKeywords"      :  "architecture, projects, portfolio, design, commercial, residential",
  "pagePath"          :  "projects/index.html",
  "pageBotVisible"    :  true,
  "pageStatus"        :  "live",
  "pageTemplate"      :  "gallery-layout",
  "pageAuthor"        :  "Adam Noble",
  "pageCreatedDate"   :  "05-Apr-2025",
  "pageModifiedDate"  :  "10-Apr-2025",
  "pageParent"        :  "WEB-PAGE-01",
  "pageOrder"         :  2,
  "pageInNavigation"  :  true,
  "pageCategory"      :  "portfolio",
  "pagePermissions"   :  "public",
  "pageAnalyticsID"   :  "UA-12345-01",
  "pageRedirects"     :  ["old-projects.html", "portfolio.html"],
  "pageScripts"       :  ["gallery.js", "lightbox.js"],
  "pageStyles"        :  ["gallery-custom.css"],
  "pageFeaturedImage" :  "assets/images/featured/project-overview.jpg",
  "pageRelatedPages"  :  ["WEB-PAGE-04", "WEB-PAGE-05"],
  "pageCustomFields"  :  {
    "showContactForm" :  true,
    "galleryColumns"  :  3,
    "featuredProject" :  "PRJ-2025-001"
  }
}
```

## Project-Specific Properties

```json
{
  "projects": {
    "description"         :  "gallery of architectural projects",
    "content"             :  "individual project pages with details and interactive web apps",
    "projectCategories"   :  ["residential", "commercial", "institutional", "conceptual"],
    "featuredProjects"    :  ["PRJ-2025-001", "PRJ-2024-012"],
    "projectItems"        :  [
      {
        "projectId"       :  "PRJ-2025-001",
        "projectTitle"    :  "Riverfront Pavilion",
        "projectType"     :  "commercial",
        "projectStatus"   :  "completed",
        "projectYear"     :  2025,
        "projectLocation" :  "Riverside, CA",
        "projectClient"   :  "City of Riverside",
        "projectBudget"   :  "$1.2M",
        "projectSize"     :  "3,500 sq ft",
        "projectTags"     :  ["pavilion", "public space", "waterfront"],
        "projectGallery"  :  ["img1.jpg", "img2.jpg", "img3.jpg"],
        "projectFeatured" :  true,
        "projectPagePath" :  "projects/riverfront-pavilion.html"
      }
    ]
  }
}
```

## SEO and Analytics Properties

```json
{
  "seoSettings"           :  {
    "defaultTitle"        :  "Noble Architecture | Award-Winning Design Studio",
    "titleSeparator"      :  " | ",
    "defaultDescription"  :  "Noble Architecture specializes in sustainable modern design for residential and commercial projects",
    "defaultKeywords"     :  "architecture, design, sustainable, modern, portfolio",
    "canonicalDomain"     :  "https://www.noble-architecture.com",
    "sitemapPath"         :  "sitemap.xml",
    "robotsTxtRules"      :  ["User-agent: *", "Disallow: /client-portal/"],
    "socialImage"         :  "assets/images/social-share.jpg",
    "socialAccounts"      :  {
      "instagram"         :  "@noble_architecture",
      "pinterest"         :  "noblearchitecture",
      "linkedIn"          :  "noble-architecture"
    }
  },
  "analyticsConfig"       :  {
    "provider"            :  "Google Analytics",
    "trackingId"          :  "UA-12345-01",
    "anonymizeIp"         :  true,
    "enabledForPages"     :  ["public", "portfolio"],
    "disabledForPages"    :  ["client-portal"]
  }
}
```

## Global Configuration Properties

```json
{
  "siteConfig"            :  {
    "siteName"            :  "Noble Architecture",
    "siteVersion"         :  "1.0.1",
    "siteAuthor"          :  "Adam Noble",
    "siteEmail"           :  "contact@noble-architecture.com",
    "sitePhone"           :  "+1 (555) 123-4567",
    "siteAddress"         :  "123 Design Avenue, Los Angeles, CA 90001",
    "siteLanguage"        :  "en-US",
    "siteCurrency"        :  "USD",
    "siteTimezone"        :  "America/Los_Angeles",
    "maintenanceMode"     :  false,
    "enableCaching"       :  true,
    "lastDeployment"      :  "15-Apr-2025",
    "devEnvironment"      :  "production",
    "apiKeys"             :  {
      "mapbox"            :  "pk_123456789abcdef",
      "formSubmission"    :  "fs_987654321zyxwv"
    },
    "thirdPartyServices"  :  {
      "fonts"             :  "Google Fonts",
      "cdn"               :  "Cloudflare",
      "forms"             :  "Formspree"
    }
  }
}
```

## User and Permission Properties

```json
{
  "userRoles"             :  {
    "admin"               :  {
      "accessLevel"       :  10,
      "permissions"       :  ["read", "write", "delete", "manage_users"]
    },
    "editor"              :  {
      "accessLevel"       :  7,
      "permissions"       :  ["read", "write", "limited_delete"]
    },
    "client"              :  {
      "accessLevel"       :  3,
      "permissions"       :  ["read_own", "comment"]
    },
    "public"              :  {
      "accessLevel"       :  1,
      "permissions"       :  ["read_public"]
    }
  }
}
```

These additional properties would provide a comprehensive structure for managing website content, SEO, analytics, project information, and user permissions, all while maintaining the column-aligned JSON format established in the original document.
